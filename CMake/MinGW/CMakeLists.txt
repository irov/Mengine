CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(Mengine_MinGW)

INCLUDE(../macro_template.cmake)
INCLUDE(../mingw_template.cmake)

SET(MENGINE_TARGET "MINGW")

SET(MENGINE_TARGET_WINDOWS OFF CACHE BOOL "MENGINE_TARGET_WINDOWS" FORCE)
SET(MENGINE_TARGET_MINGW ON CACHE BOOL "MENGINE_TARGET_MINGW" FORCE)
SET(MENGINE_TARGET_ANDROID OFF CACHE BOOL "MENGINE_TARGET_ANDROID" FORCE)

SET(MENGINE_FRAMEWORK_PYTHON ON CACHE BOOL "MENGINE_FRAMEWORK_PYTHON" FORCE)

SET(MENGINE_RENDER_OPENGL OFF CACHE BOOL "MENGINE_RENDER_OPENGL" FORCE)
SET(MENGINE_RENDER_DIRECTX ON CACHE BOOL "MENGINE_RENDER_DIRECTX" FORCE)

SET(MENGINE_ARCHITECTURE_X86 ON CACHE BOOL "MENGINE_ARCHITECTURE_X86" FORCE)
SET(MENGINE_ARCHITECTURE_X64 OFF CACHE BOOL "MENGINE_ARCHITECTURE_X64" FORCE)

SET(MENGINE_PLATFORM_SDL OFF CACHE BOOL "MENGINE_PLATFORM_SDL" FORCE)
SET(MENGINE_PLATFORM_WIN32 ON CACHE BOOL "MENGINE_PLATFORM_WIN32" FORCE)

SET(MENGINE_TOOLCHAIN_MSVC OFF CACHE BOOL "MENGINE_TOOLCHAIN_MSVC" FORCE)
SET(MENGINE_TOOLCHAIN_MINGW ON CACHE BOOL "MENGINE_TOOLCHAIN_MINGW" FORCE)

SET( MENGINE_REPOSITORY ${CMAKE_CURRENT_SOURCE_DIR}/../..)

# output paths
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/build_temp/${PROJECT_NAME})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/bin/mingw/${CMAKE_BUILD_TYPE})

# input and thirdparty paths
SET(THIRDPARTY_DIR ${MENGINE_REPOSITORY}/dependencies)
SET(THIRDPARTY_LIB_DIR ${MENGINE_REPOSITORY}/build_temp/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE})

SET(MENGINE_SOURCE_DIR ${MENGINE_REPOSITORY}/src)
SET(CMAKE_TEMP_DIR ${MENGINE_REPOSITORY}/CMakeTemp/MinGW/${CMAKE_GENERATOR}/${CMAKE_BUILD_TYPE})

# plugins
ADD_PLUGIN(MENGINE_PLUGIN_NODEDEBUGRENDER ON OFF "MENGINE_PLUGIN_NODEDEBUGRENDER")
ADD_PLUGIN(MENGINE_PLUGIN_RESOURCEVALIDATE OFF OFF "MENGINE_PLUGIN_RESOURCEVALIDATE")
ADD_PLUGIN(MENGINE_PLUGIN_RESOURCEPREFETCHER ON OFF "MENGINE_PLUGIN_RESOURCEPREFETCHER")
ADD_PLUGIN(MENGINE_PLUGIN_METABUFLOADER ON OFF "MENGINE_PLUGIN_METABUFLOADER")
ADD_PLUGIN(MENGINE_PLUGIN_VIDEO ON OFF "MENGINE_PLUGIN_VIDEO")
ADD_PLUGIN(MENGINE_PLUGIN_THEORA ON OFF "MENGINE_PLUGIN_THEORA")
ADD_PLUGIN(MENGINE_PLUGIN_BITMAPFONT ON OFF "MENGINE_PLUGIN_BITMAPFONT")
ADD_PLUGIN(MENGINE_PLUGIN_TTF ON OFF "MENGINE_PLUGIN_TTF")
ADD_PLUGIN(MENGINE_PLUGIN_SPINE OFF OFF "MENGINE_PLUGIN_SPINE")
ADD_PLUGIN(MENGINE_PLUGIN_CURL ON ON "MENGINE_PLUGIN_CURL")
ADD_PLUGIN(MENGINE_PLUGIN_ASTRALAX ON ON "MENGINE_PLUGIN_ASTRALAX")
ADD_PLUGIN(MENGINE_PLUGIN_STEAM OFF ON "MENGINE_PLUGIN_STEAM")
ADD_PLUGIN(MENGINE_PLUGIN_OZZ_ANIMATION ON ON "MENGINE_PLUGIN_OZZ_ANIMATION")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_FACEBOOK OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_FACEBOOK")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_UNITYADS OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_UNITYADS")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_ADMOB OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_ADMOB")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_DEVTODEV OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_DEVTODEV")
ADD_PLUGIN(MENGINE_PLUGIN_WIN32_SOCKET OFF OFF "MENGINE_PLUGIN_WIN32_SOCKET")

ADD_DEFINITIONS(-DMENGINE_MASTER_RELEASE)

SET( APPLICATION_DEPENDENCIES )
SET( APPLICATION_LIBS )
SET( APPLICATION_LIB_PATHS )

INCLUDE_DIRECTORIES( ${MENGINE_SOURCE_DIR} )
INCLUDE_DIRECTORIES( ${THIRDPARTY_DIR}/stdex/include )

ADD_SUBDIRECTORY( ${MENGINE_SOURCE_DIR} ${CMAKE_TEMP_DIR}/src )

ADD_SUBDIRECTORY( ${MENGINE_SOURCE_DIR}/Win32Application ${CMAKE_TEMP_DIR}/Win32Apllication )

ADD_DEPENDENCIES( Win32Application ${APPLICATION_DEPENDENCIES} )