CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )

INCLUDE( ../macro_template.cmake )

PROJECT( Mengine_WIN64 )

INCLUDE( ../win64_template.cmake )

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# solution

SET(MENGINE_TARGET "WIN32")

SET(MENGINE_RENDER_OPENGL OFF CACHE BOOL "MENGINE_RENDER_OPENGL" FORCE)
SET(MENGINE_RENDER_DIRECTX ON CACHE BOOL "MENGINE_RENDER_DIRECTX" FORCE)

SET(MENGINE_PLATFORM_WIN64 ON CACHE BOOL "MENGINE_PLATFORM_WIN64" FORCE)

SET(MENGINE_TARGET_MSVC ON CACHE BOOL "MENGINE_TARGET_MSVC" FORCE)
SET(MENGINE_TARGET_MINGW OFF CACHE BOOL "MENGINE_TARGET_MINGW" FORCE)
SET(MENGINE_TARGET_SDL OFF CACHE BOOL "MENGINE_TARGET_SDL" FORCE)

SET( MENGINE_REPOSITORY ${CMAKE_CURRENT_SOURCE_DIR}/../.. )

# output paths
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/build_temp/${PROJECT_NAME} )
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/bin/win64 )

# input and thirdparty paths
SET( THIRDPARTY_DIR ${MENGINE_REPOSITORY}/dependencies )
SET( THIRDPARTY_LIB_DIR ${MENGINE_REPOSITORY}/build_temp/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE} )

SET( SOURCE_DIR ${MENGINE_REPOSITORY}/src )
SET( CMAKE_TEMP_DIR ${MENGINE_REPOSITORY}/CMakeTemp/WIN64/${CMAKE_GENERATOR}/${CMAKE_BUILD_TYPE} )

# plugins
ADD_PLUGIN(MENGINE_PLUGIN_TTF ON OFF "TTF")
ADD_PLUGIN(MENGINE_PLUGIN_SPINE OFF OFF "SPINE")
ADD_PLUGIN(MENGINE_PLUGIN_CURL ON OFF "CURL")
ADD_PLUGIN(MENGINE_PLUGIN_ASTRALAX ON ON "ASTRALAX")
ADD_PLUGIN(MENGINE_PLUGIN_STEAM OFF ON "STEAM")

SET(MENGINE_WIN32_SOCKET_DLL OFF CACHE BOOL "Socket" FORCE)

#ADD_DEFINITIONS(-DMENGINE_RENDER_TEXTURE_RGBA)
#ADD_DEFINITIONS(-DMENGINE_MASTER_RELEASE)

SET( APPLICATION_DEPENDENCIES )
SET( APPLICATION_LIBS )
SET( APPLICATION_LIB_PATHS )

INCLUDE_DIRECTORIES( ${SOURCE_DIR} )

ADD_SUBDIRECTORY( ${SOURCE_DIR} ${CMAKE_TEMP_DIR}/src )

ADD_SUBDIRECTORY( ${SOURCE_DIR}/WindowsLayer ${CMAKE_TEMP_DIR}/WindowsLayer )
ADD_SUBDIRECTORY( ${SOURCE_DIR}/Win32Application ${CMAKE_TEMP_DIR}/Win32Apllication )

ADD_DEPENDENCIES( Win32Application ${APPLICATION_DEPENDENCIES} )