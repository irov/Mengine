CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

OPTION(MENGINE_BUILD_ONLY_EXECUTABLE_MODULE "Mengine build only executable module" OFF)
OPTION(MENGINE_BUILD_MENGINE_MASTER_RELEASE "Mengine build master release" OFF)
OPTION(MENGINE_USE_PRECOMPILED_HEADER "Mengine use precompiled header" OFF)
OPTION(MENGINE_USE_SCRIPT_SERVICE "Mengine use script" ON)
OPTION(MENGINE_EXTERNAL_FRAMEWORK "Mengine external framework" OFF)
OPTION(MENGINE_EXTERNAL_FRAMEWORK_SHARED "Mengine external framework shared" OFF)
OPTION(MENGINE_USE_SUBFOLDER "Mengine use subfolder" OFF)

SET(MENGINE_PROJECT_NAME "Mengine_WIN64" CACHE STRING "Mengine project name")
SET(MENGINE_EXTERNAL_FRAMEWORK_NAME "" CACHE STRING "Mengine external framework name")
SET(MENGINE_EXTERNAL_FRAMEWORK_SOURCE_PATH "" CACHE STRING "Mengine external framework source path")
SET(MENGINE_EXTERNAL_FRAMEWORK_TEMP_PATH "" CACHE STRING "Mengine external framework temp path")
SET(MENGINE_SUBFOLDER_NAME "Mengine" CACHE STRING "Mengine subfolder name")

PROJECT(${MENGINE_PROJECT_NAME})

INCLUDE(../macro_template.cmake)
INCLUDE(../win64_template.cmake)
INCLUDE(../mengine_template.cmake)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /WX")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /WX")

SET_MENGINE_ENVIRONMENT(WINDOWS DIRECTX X64 WIN32 MSVC)

ADD_MENGINE_FRAMEWORK()

# plugins
ADD_PLUGIN(MENGINE_PLUGIN_PYTHONFRAMEWORK ON OFF "MENGINE_PLUGIN_PYTHONFRAMEWORK")
ADD_PLUGIN(MENGINE_PLUGIN_UIFRAMEWORK ON OFF "MENGINE_PLUGIN_UIFRAMEWORK")
ADD_PLUGIN(MENGINE_PLUGIN_MOVIE ON OFF "MENGINE_PLUGIN_MOVIE")
ADD_PLUGIN(MENGINE_PLUGIN_MOVIE1 ON OFF "MENGINE_PLUGIN_MOVIE1")
ADD_PLUGIN(MENGINE_PLUGIN_NODEDEBUGRENDER ON OFF "MENGINE_PLUGIN_NODEDEBUGRENDER")
ADD_PLUGIN(MENGINE_PLUGIN_RESOURCEVALIDATE ON OFF "MENGINE_PLUGIN_RESOURCEVALIDATE")
ADD_PLUGIN(MENGINE_PLUGIN_RESOURCEPREFETCHER ON OFF "MENGINE_PLUGIN_RESOURCEPREFETCHER")
ADD_PLUGIN(MENGINE_PLUGIN_RESOURCECONVERT ON OFF "MENGINE_PLUGIN_RESOURCECONVERT")
ADD_PLUGIN(MENGINE_PLUGIN_RESOURCEDEBUGGER ON OFF "MENGINE_PLUGIN_RESOURCEDEBUGGER")
ADD_PLUGIN(MENGINE_PLUGIN_NODEDEBUGGER ON ON "MENGINE_PLUGIN_NODEDEBUGGER")
ADD_PLUGIN(MENGINE_PLUGIN_METABUFLOADER ON OFF "MENGINE_PLUGIN_METABUFLOADER")
ADD_PLUGIN(MENGINE_PLUGIN_WEBP ON OFF "MENGINE_PLUGIN_WEBP")
ADD_PLUGIN(MENGINE_PLUGIN_VIDEO ON OFF "MENGINE_PLUGIN_VIDEO")
ADD_PLUGIN(MENGINE_PLUGIN_THEORA ON OFF "MENGINE_PLUGIN_THEORA")
ADD_PLUGIN(MENGINE_PLUGIN_BITMAPFONT ON OFF "MENGINE_PLUGIN_BITMAPFONT")
ADD_PLUGIN(MENGINE_PLUGIN_TTF ON OFF "MENGINE_PLUGIN_TTF")
ADD_PLUGIN(MENGINE_PLUGIN_SPINE OFF OFF "MENGINE_PLUGIN_SPINE")
ADD_PLUGIN(MENGINE_PLUGIN_CURL ON ON "MENGINE_PLUGIN_CURL")
ADD_PLUGIN(MENGINE_PLUGIN_ASTRALAX ON ON "MENGINE_PLUGIN_ASTRALAX")
ADD_PLUGIN(MENGINE_PLUGIN_STEAM OFF ON "MENGINE_PLUGIN_STEAM")
ADD_PLUGIN(MENGINE_PLUGIN_OZZ_ANIMATION ON ON "MENGINE_PLUGIN_OZZ_ANIMATION")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_FACEBOOK OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_FACEBOOK")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_UNITYADS OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_UNITYADS")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_ADMOB OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_ADMOB")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_DEVTODEV OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_DEVTODEV")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_LINKING OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_LINKING")
ADD_PLUGIN(MENGINE_PLUGIN_ANDROID_NATIVE_LOCAL_NOTIFICATIONS OFF OFF "MENGINE_PLUGIN_ANDROID_NATIVE_LOCAL_NOTIFICATIONS")
ADD_PLUGIN(MENGINE_PLUGIN_WIN32_SOCKET ON ON "MENGINE_PLUGIN_WIN32_SOCKET")
ADD_PLUGIN(MENGINE_PLUGIN_POSIX_SOCKET OFF ON "MENGINE_PLUGIN_POSIX_SOCKET")

#ADD_DEFINITIONS(-DMENGINE_RENDER_TEXTURE_RGBA)
ADD_DEFINITIONS(-DMENGINE_SETJMP_UNSUPPORTED)

ADD_SUBDIRECTORY(${MENGINE_SOURCE_DIR} ${CMAKE_TEMP_DIR}/src)

IF(MENGINE_EXTERNAL_FRAMEWORK)
    ADD_SUBDIRECTORY(${MENGINE_EXTERNAL_FRAMEWORK_SOURCE_PATH} ${MENGINE_EXTERNAL_FRAMEWORK_TEMP_PATH})
ENDIF()

ADD_SUBDIRECTORY(${MENGINE_SOURCE_DIR}/Win32Application ${CMAKE_TEMP_DIR}/Win32Apllication)