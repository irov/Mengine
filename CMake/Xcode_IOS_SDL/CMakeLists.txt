CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(Mengine_Xcode_IOS_SDL)

INCLUDE(../macro_template.cmake)
INCLUDE(../xcode_ios_template.cmake)

SET(MENGINE_TARGET "SDL")

SET(MENGINE_FRAMEWORK_PYTHON ON CACHE BOOL "MENGINE_FRAMEWORK_PYTHON" FORCE)

SET(MENGINE_RENDER_OPENGL ON CACHE BOOL "MENGINE_RENDER_OPENGL" FORCE)
SET(MENGINE_RENDER_DIRECTX OFF CACHE BOOL "MENGINE_RENDER_DIRECTX" FORCE)

SET(MENGINE_ARCHITECTURE_X86 ON CACHE BOOL "MENGINE_ARCHITECTURE_X86" FORCE)
SET(MENGINE_ARCHITECTURE_X64 OFF CACHE BOOL "MENGINE_ARCHITECTURE_X64" FORCE)

SET(MENGINE_PLATFORM_SDL ON CACHE BOOL "MENGINE_PLATFORM_SDL" FORCE)
SET(MENGINE_PLATFORM_WIN32 OFF CACHE BOOL "MENGINE_PLATFORM_WIN32" FORCE)

SET(MENGINE_TOOLCHAIN_MSVC OFF CACHE BOOL "MSVC" FORCE)
SET(MENGINE_TOOLCHAIN_MINGW OFF CACHE BOOL "MINGW" FORCE)

SET( MENGINE_REPOSITORY ${CMAKE_CURRENT_SOURCE_DIR}/../.. )

# output paths
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/build_temp/${PROJECT_NAME} )
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/bin/${PROJECT_NAME} )

# input and thirdparty paths
SET( THIRDPARTY_DIR ${MENGINE_REPOSITORY}/dependencies )
SET( THIRDPARTY_LIB_DIR ${MENGINE_REPOSITORY}/build_temp/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE} )

SET( MENGINE_SOURCE_DIR ${MENGINE_REPOSITORY}/src )
SET( CMAKE_TEMP_DIR ${MENGINE_REPOSITORY}/CMakeTemp/${PROJECT_NAME}/${CMAKE_BUILD_TYPE} )

# implementation
ADD_PLUGIN(MENGINE_PLUGIN_TTF ON OFF "MENGINE_PLUGIN_TTF")
ADD_PLUGIN(MENGINE_PLUGIN_SPINE OFF OFF "MENGINE_PLUGIN_SPINE")
ADD_PLUGIN(MENGINE_PLUGIN_CURL OFF OFF "MENGINE_PLUGIN_CURL")
ADD_PLUGIN(MENGINE_PLUGIN_ASTRALAX OFF OFF "MENGINE_PLUGIN_ASTRALAX")

ADD_DEFINITIONS(-DMENGINE_RENDER_TEXTURE_RGBA)
ADD_DEFINITIONS(-DMENGINE_MASTER_RELEASE)

SET(APPLICATION_DEPENDENCIES)
SET(APPLICATION_LIBS)
SET(APPLICATION_LIB_PATHS)

INCLUDE_DIRECTORIES(${MENGINE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${THIRDPARTY_DIR}/stdex/include)

ADD_SUBDIRECTORY(${MENGINE_SOURCE_DIR} ${CMAKE_TEMP_DIR}/src)
ADD_SUBDIRECTORY(${MENGINE_SOURCE_DIR}/SDLApplication ${CMAKE_TEMP_DIR}/SDLApplication)

ADD_DEPENDENCIES(SDLApplication ${APPLICATION_DEPENDENCIES})
