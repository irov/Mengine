 
CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )

MACRO( ADD_FILTER group_name )
	SOURCE_GROUP( ${group_name} FILES ${ARGN} )
	SET( SRC_FILES ${SRC_FILES} ${ARGN} )
	#MESSAGE( ${ARGN} )
ENDMACRO( ADD_FILTER group_name files )


# solution

PROJECT( Mengine_MinGW )

SET(MENGINE_TARGET "MINGW")

INCLUDE( ../mingw_template.cmake )

SET( MENGINE_REPOSITORY ${CMAKE_CURRENT_SOURCE_DIR}/../.. )
SET( MENGINE_LIB_PREFIX )
SET( MENGINE_LIB_SUFFIX )
#SET( MENGINE_LIB_DIR "lib" )

# output paths
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/${MENGINE_LIB_DIR} )
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/bin )

# input and thirdparty paths
SET( THIRDPARTY_DIR ${MENGINE_REPOSITORY}/dependencies )
SET( SOURCE_DIR ${MENGINE_REPOSITORY}/src )
SET( CMAKE_TEMP_DIR ${MENGINE_REPOSITORY}/CMakeTemp/MinGW )

# implementation

SET( MENGE_DEBUG )
string(COMPARE EQUAL CMAKE_BUILD_TYPE Debug MENGE_DEBUG)

ADD_DEFINITIONS(-D"override = /* */")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.h ${SOURCE_DIR}/Config/Config.h COPYONLY)

SET( MENGE_DEPENDENCIES )
SET( APPLICATION_DEPENDENCIES )
SET( APPLICATION_LIBS )
SET( APPLICATION_LIB_PATHS )


INCLUDE_DIRECTORIES( ${SOURCE_DIR} )
INCLUDE_DIRECTORIES( ${SOURCE_DIR}/Utils )
INCLUDE_DIRECTORIES( ${THIRDPARTY_DIR}/boost )

ADD_SUBDIRECTORY( ${SOURCE_DIR} ${CMAKE_TEMP_DIR}/src )

LINK_DIRECTORIES( ${THIRDPARTY_DIR}/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE} ${APPLICATION_LIB_PATHS} )

ADD_SUBDIRECTORY( ${SOURCE_DIR}/WindowsLayer ${CMAKE_TEMP_DIR}/WindowsLayer )
ADD_SUBDIRECTORY( ${SOURCE_DIR}/WinApplication ${CMAKE_TEMP_DIR}/WinApllication )
ADD_DEPENDENCIES( WinApplication ${APPLICATION_DEPENDENCIES} )
