#	include "Factorable.h"
#	include "Factory.h"

namespace Menge
{
	//////////////////////////////////////////////////////////////////////////
	Factorable::Factorable()
		: m_factory(0)
	{
	}
	//////////////////////////////////////////////////////////////////////////
	Factorable::~Factorable()
	{
	}
	//////////////////////////////////////////////////////////////////////////
	void Factorable::setFactory( Factory * _factory )
	{
		m_factory = _factory;
	}
	//////////////////////////////////////////////////////////////////////////
	void Factorable::create()
	{
		this->_create();
	}
	//////////////////////////////////////////////////////////////////////////
	void Factorable::_create()
	{
		//Empty
	}
	//////////////////////////////////////////////////////////////////////////
	void Factorable::destroy()
	{
		if( this->_destroy() == false )
		{
			this->_deferredDestroy();
		}
		else
		{
			if( m_factory )
			{
				m_factory->destroyObject( this );
			}
			else
			{
				delete this;
			}
		}
	}
	//////////////////////////////////////////////////////////////////////////
	bool Factorable::_destroy()
	{
		return true;
	}
	//////////////////////////////////////////////////////////////////////////
	void Factorable::_deferredDestroy()
	{
		//Empty
	}
}
