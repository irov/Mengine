#version 330 core

uniform sampler2D inSampler0;
uniform sampler2D inSampler1;

uniform vec4 uvsl;

uniform vec4 u_color0;
uniform vec4 u_color1;
uniform float u_scale0x;
uniform float u_scale0y;
uniform float u_scale1x;
uniform float u_scale1y;
uniform float u_timefactor;
uniform float u_timescale;
uniform float u_timeamplitude;

in vec4 v_Col;
in vec2 v_UV0;
in vec2 v_UV1;

out vec4 fragColor;

float sRGB(float t){ return mix(1.055*pow(t, 1./2.4) - 0.055, 12.92*t, step(t, 0.0031308)); }
vec3 sRGB(in vec3 c) { return vec3 (sRGB(c.x), sRGB(c.y), sRGB(c.z)); }

void main()
{    
    vec4 col_t = texture(inSampler0, v_UV0.xy);
    float a = texture(inSampler1, v_UV1.xy).w;
    
    float ux = (v_UV0.x + uvsl.x) * uvsl.z;
    float uy = (v_UV0.y + uvsl.y) * uvsl.w;
    
    float tx = (ux - 0.5) * cos(u_timefactor * u_timeamplitude) * u_timescale;
    float ty = (uy - 0.5) * sin(u_timefactor * u_timeamplitude) * u_timescale;
    vec3 col1 = u_color0.xyz + vec3(vec2(u_scale0x * tx, u_scale0y * ty), 0.0);
    vec3 col2 = u_color1.xyz + vec3(vec2(u_scale1x * ty, u_scale1y * tx), 0.0);
    
    vec3 col = mix(col2, col1, ux * uy);
    
    vec3 col_s = sRGB(col);
    
	vec4 c = v_Col * col_t * vec4( col, a );
    
    fragColor = c;
}