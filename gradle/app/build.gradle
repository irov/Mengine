apply plugin: 'com.android.application'
import com.trbrmrdr.Ext

android {
    ndkVersion '22.0.7026061'
    buildToolsVersion '31.0.0'
    compileSdkVersion 32
    

    ext.plugins = []

    signingConfigs {
        config {
            if (project.hasProperty("ANDROID_APP_RELEASE_STORE_FILE")) {
                print 'ANDROID_APP_RELEASE_STORE_FILE = '
                println ANDROID_APP_RELEASE_STORE_FILE

                print 'ANDROID_APP_RELEASE_KEY_ALIAS = '
                println ANDROID_APP_RELEASE_KEY_ALIAS

                storeFile file(ANDROID_APP_RELEASE_STORE_FILE)
                storePassword ANDROID_APP_RELEASE_STORE_PASSWORD
                keyAlias ANDROID_APP_RELEASE_KEY_ALIAS
                keyPassword ANDROID_APP_RELEASE_KEY_PASSWORD
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        if (project.hasProperty("ANDROID_APP_ID")) {
            applicationId ANDROID_APP_ID
            print 'ANDROID_APP_ID = '
        } else if (System.getenv('ANDROID_APP_ID')) {
            applicationId System.getenv('ANDROID_APP_ID')
            print 'ANDROID_APP_ID = '
        } else {
            applicationId "org.Mengine.ANDROID_APP_ID"
            print 'HARDCODE ANDROID_APP_ID = '
        }

        println applicationId

        minSdkVersion 19
        targetSdkVersion 32

        print 'ANDROID_APP_BUILD_PUBLISH = '
        println Ext.GetBooleanProperty(project,"ANDROID_APP_BUILD_PUBLISH")

        print 'ANDROID_APP_BUILD_NUMBER = '
        println project.getProperties().get("ANDROID_APP_BUILD_NUMBER", "0")

        def buildNumber = 0
        if (project.hasProperty("ANDROID_APP_BUILD_NUMBER")) {
            buildNumber = ANDROID_APP_BUILD_NUMBER as Integer
        }

        if (Ext.GetBooleanProperty(project,"ANDROID_APP_BUILD_PUBLISH") == true) {
            versionCode = 400000000 + buildNumber
        } else {
            versionCode = 300000000 + buildNumber
        }

        if (project.hasProperty("ANDROID_APP_VERSION_NAME")) {
            versionName ANDROID_APP_VERSION_NAME
        } else {
            versionName versionCode as String
        }

        def app_name_gradle = "org.Wonderland.EvilMonkey"

        if (project.hasProperty("ANDROID_APP_NAME")) {
            app_name_gradle = ANDROID_APP_NAME
        }

        print 'app_name_gradle = '
        println app_name_gradle

        def app_screen_orientation = "fullSensor"

        if (project.hasProperty("ANDROID_APP_SCREEN_ORIENTATION")) {
            app_screen_orientation = ANDROID_APP_SCREEN_ORIENTATION
        }

        print 'app_screen_orientation = '
        println app_screen_orientation

        manifestPlaceholders = [app_name_gradle:app_name_gradle, app_screen_orientation:app_screen_orientation]

        print 'manifestPlaceholders = '
        println manifestPlaceholders

        print 'versionCode = '
        println versionCode

        print 'versionName = '
        println versionName

        signingConfig signingConfigs.config

        multiDexEnabled true

        print 'ANDROID_APP_SPLIT_ENABLE = '
        println Ext.GetBooleanProperty(project,"ANDROID_APP_SPLIT_ENABLE")

        print 'ANDROID_APP_EMULATOR_ENABLE = '
        println Ext.GetBooleanProperty(project,"ANDROID_APP_EMULATOR_ENABLE")

         if (Ext.GetBooleanProperty(project,"ANDROID_APP_SPLIT_ENABLE") == false) {
            ndk {
                if (getBooleanProperty("ANDROID_APP_ARCH_86_64_ENABLE", true) == true) {
                    abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
                } else {
                    abiFilters "arm64-v8a", "armeabi-v7a"
                }
            }
        }

        print 'ANDROID_APP_ARCH_86_64_ENABLE = '
        println Ext.GetBooleanProperty(project,"ANDROID_APP_ARCH_86_64_ENABLE", true)
    }

    splits {
        abi {
            if (Ext.GetBooleanProperty(project,"ANDROID_APP_SPLIT_ENABLE") == true) {
                enable true
            } else {
                enable false
            }

            reset()

            if (getBooleanProperty("ANDROID_APP_ARCH_86_64_ENABLE", true) == true) {
                include "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
            } else {
                include "arm64-v8a", "armeabi-v7a"
            }

            universalApk false
        }
    }





    sourceSets {
        main {
//            if (project.hasProperty("ANDROID_APP_MANIFEST_SRC_FILE")) {
//                print 'ANDROID_APP_MANIFEST_SRC_FILE = '
//                println ANDROID_APP_MANIFEST_SRC_FILE
//
//                manifest.srcFile ANDROID_APP_MANIFEST_SRC_FILE
//            } else if (Ext.GetBooleanProperty(project,"ANDROID_APP_BUILD_PUBLISH", false) == true) {
//                println 'ANDROID_APP_MANIFEST_SRC_FILE = AndroidManifestPublish.xml'
//
//                manifest.srcFile 'AndroidManifestPublish.xml'
//            } else {
//                println 'ANDROID_APP_MANIFEST_SRC_FILE = AndroidManifest.xml [Default]'

                manifest.srcFile './AndroidManifest.xml'
//            }

            if (project.hasProperty("ANDROID_APP_ASSETS_JAVA_NO_SRC_DIR")) {
                println 'ANDROID_APP_ASSETS_JAVA_SRC_DIR = [No]'

                java.srcDirs += ['../../dependencies/SDL2/android-project/app/src/main/java/']
            } else if (project.hasProperty("ANDROID_APP_ASSETS_JAVA_SRC_DIR")) {
                print 'ANDROID_APP_ASSETS_JAVA_SRC_DIR = '
                println ANDROID_APP_ASSETS_JAVA_SRC_DIR

                java.srcDirs += [ANDROID_APP_ASSETS_JAVA_SRC_DIR, '../../dependencies/SDL2/android-project/app/src/main/java']
            } else {
                println 'ANDROID_APP_ASSETS_JAVA_SRC_DIR = src [Default]'
                println 'ANDROID_APP_ASSETS_JAVA_SRC_DIR = ../../dependencies/SDL2/android-project/app/src/main/java [Default]'

                java.srcDirs += ['src']

//                java.srcDirs += ['../../dependencies/SDL2/android-project/app/src/main/java/']
            }

            if (project.hasProperty("ANDROID_APP_ASSETS_RES_DIR")) {
                print 'ANDROID_APP_ASSETS_RES_DIR = '
                println ANDROID_APP_ASSETS_RES_DIR

                res.srcDirs += [ANDROID_APP_ASSETS_RES_DIR]
            } else {
                println 'ANDROID_APP_ASSETS_RES_DIR = res [Default]'

                res.srcDirs += ['res']
            }

			if (project.hasProperty("ANDROID_APP_ASSETS_SRC_DIR")) {
                print 'ANDROID_APP_ASSETS_SRC_DIR = '
                println ANDROID_APP_ASSETS_SRC_DIR

                assets.srcDirs = [ANDROID_APP_ASSETS_SRC_DIR]
            } else {
                print 'ANDROID_APP_ASSETS_SRC_DIR = '
                println 'data'

                assets.srcDirs = ['data']
            }
        }
    }
    packagingOptions {
        jniLibs {
            pickFirsts += ['lib/**/libc++_shared.so', 'lib/**/libopenal.so', 'lib/**/libSDL2.so']
        }
    }

    afterEvaluate {
        if (Ext.GetBooleanProperty(project,"ANDROID_APP_UPLOAD_CRASHLYTICS") == true) {
            build.finalizedBy(uploadCrashlyticsSymbolFileRelease)
        }
    }
    androidResources {
        noCompress 'pak', 'bin'
    }
}

ext.abiCodes = ["arm64-v8a": 1, "armeabi-v7a": 2, "x86": 3, "x86_64": 4]

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def baseAbiVersionCode = project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))

        if (baseAbiVersionCode != null) {
            output.versionCodeOverride =
                    baseAbiVersionCode * 1000000 + variant.versionCode
        }
    }
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.preference:preference:1.2.0'


    implementation project(':libraries:SDL2')
    implementation project(':libraries:OpenAL32')
    implementation project(':libraries:Mengine')

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //?? - пусто
    implementation fileTree(dir: '../../dependencies/externals-android', include: ['*.jar'])
}

//???? - пусто -только либа реекламы
if( Ext.GetBooleanProperty(project,"ANDROID_APP_ENABLE_UNITYADS", true) == true ) {
    println 'ANDROID_APP_ENABLE_UNITYADS: TRUE'

    dependencies {
        implementation project(':libraries:unity-ads')
    }
}
else
{
    println 'ANDROID_APP_ENABLE_UNITYADS: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_ENABLE_DEVTODEV", true) == true ) {
    println 'ANDROID_APP_ENABLE_DEVTODEV: TRUE'

    dependencies {
        implementation project(':libraries:devtodev')
    }
}
else
{
    println 'ANDROID_APP_ENABLE_DEVTODEV: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_ENABLE_FACEBOOK", true) == true ) {
    println 'ANDROID_APP_ENABLE_FACEBOOK: TRUE'

    dependencies {
        implementation 'com.facebook.android:facebook-android-sdk:12.0.0'
        implementation project(':libraries:Facebook')
    }
}
else
{
    println 'ANDROID_APP_ENABLE_FACEBOOK: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_ENABLE_GOOGLE_SERVICE", true) == true ) {
    println 'ANDROID_APP_ENABLE_GOOGLE_SERVICE: TRUE'

    apply plugin: 'com.google.gms.google-services'

    dependencies {
        implementation 'com.google.android.gms:play-services-gcm:17.0.0'
        implementation 'com.google.android.gms:play-services-basement:18.0.0'
    }
}
else
{
    println 'ANDROID_APP_ENABLE_GOOGLE_SERVICE: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_ENABLE_FIREBASE_CRASHLYTICS", true) == true ) {
    println 'ANDROID_APP_ENABLE_FIREBASE_CRASHLYTICS: TRUE'

    apply plugin: 'com.google.firebase.crashlytics'

    android {
        if (Ext.GetBooleanProperty(project,"ANDROID_APP_UPLOAD_CRASHLYTICS") == true) {
            buildTypes {
                debug {
                    externalNativeBuild {
                        firebaseCrashlytics {
                            mappingFileUploadEnabled true
                        }
                    }
                }

                release {
                    externalNativeBuild {
                        firebaseCrashlytics {
                            nativeSymbolUploadEnabled true
                        }
                    }
                }
            }
        }
    }

    dependencies {
        implementation platform('com.google.firebase:firebase-bom:26.3.0')

        implementation 'com.google.firebase:firebase-crashlytics'
        implementation 'com.google.firebase:firebase-analytics'
    }
}
else
{
    println 'ANDROID_APP_ENABLE_FIREBASE_CRASHLYTICS: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_ENABLE_LOCAL_NOTIFICATIONS", true) == true ) {
    println 'ANDROID_APP_ENABLE_LOCAL_NOTIFICATIONS: TRUE'

    dependencies {
        implementation 'androidx.core:core:1.7.0'
        implementation 'androidx.annotation:annotation:1.3.0'
        implementation project(':libraries:LocalNotifications')
    }
}
else
{
    println 'ANDROID_APP_ENABLE_LOCAL_NOTIFICATIONS: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_ENABLE_SENTRY", true) == true ) {
    println 'ANDROID_APP_ENABLE_SENTRY: TRUE'

    apply plugin: 'io.sentry.android.gradle'

    dependencies {
        implementation 'io.sentry:sentry-android:5.2.3'

        implementation project(':libraries:Sentry')
    }
}
else
{
    println 'ANDROID_APP_ENABLE_SENTRY: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_ENABLE_MAR", true) == true ) {
    println 'ANDROID_APP_ENABLE_MAR: TRUE'

    dependencies {
        implementation project(':libraries:MAR')
    }
}
else
{
    println 'ANDROID_APP_ENABLE_MAR: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_GOOGLE_BILLING", true) == true ) {
    println 'ANDROID_APP_GOOGLE_BILLING: TRUE'

    dependencies {
        implementation 'androidx.annotation:annotation:1.3.0'
        implementation 'com.android.billingclient:billing:4.0.0'
        implementation project(':libraries:GoogleBilling')
    }
}
else
{
    println 'ANDROID_APP_GOOGLE_BILLING: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_APPLOVIN", true) == true ) {
    println 'ANDROID_APP_APPLOVIN: TRUE'

    dependencies {
        //для рекламного id
        implementation 'com.google.android.gms:play-services-location:19.0.1'
        implementation 'com.applovin:applovin-sdk:11.1.2'
        implementation project(':libraries:Applovin')
    }
}
else
{
    println 'ANDROID_APP_APPLOVIN: FALSE'
}

if( Ext.GetBooleanProperty(project,"ANDROID_APP_GOOGLE_GAME_SOCIAL", true) == true ) {
    println 'ANDROID_APP_GOOGLE_GAME_SOCIAL: TRUE'


    dependencies {
        implementation "com.google.android.gms:play-services-games:22.0.1"
        implementation "com.google.android.gms:play-services-auth:20.1.0"
        implementation project(':libraries:GoogleGameSocial')
    }
}
else
{
    println 'ANDROID_APP_GOOGLE_GAME_SOCIAL: FALSE'
}

