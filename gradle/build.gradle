buildscript {
    apply from: rootProject.projectDir.getAbsolutePath() + '/utils.gradle'

    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }

        if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN") == true) {
            maven { url 'https://artifacts.applovin.com/android' }
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.10.1'

        if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_GOOGLE_SERVICE") == true) {
            classpath 'com.google.gms:google-services:4.4.2'
        }

        if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_SENTRY") == true) {
            classpath 'io.sentry:sentry-android-gradle-plugin:5.3.0'
        }

        if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_FIREBASE_CRASHLYTICS") == true) {
            classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.3'
        }

        if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_FIREBASE_PERFORMANCEMONITORING") == true) {
            classpath 'com.google.firebase:perf-plugin:1.4.2'
        }

        if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN") == true) {
            classpath 'com.applovin.quality:AppLovinQualityServiceGradlePlugin:5.8.6'
        }

        if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_DATADOG") == true) {
            classpath 'com.datadoghq:dd-sdk-android-gradle-plugin:1.16.0'
        }
    }
}

def ANDROID_APP_NDK_VERSION = Utils.getStringProperty("ANDROID_APP_NDK_VERSION", null)
def ANDROID_APP_CMAKE_VERSION = Utils.getStringProperty("ANDROID_APP_CMAKE_VERSION", null)
def ANDROID_APP_MIN_SDK_VERSION = Utils.getIntegerProperty("ANDROID_APP_MIN_SDK_VERSION", null)
def ANDROID_APP_TARGET_SDK_VERSION = Utils.getIntegerProperty("ANDROID_APP_TARGET_SDK_VERSION", null)
def ANDROID_APP_COMPILE_SDK_VERSION = Utils.getIntegerProperty("ANDROID_APP_COMPILE_SDK_VERSION", null)

allprojects {
    layout.buildDirectory.set(layout.projectDirectory.dir(rootProject.projectDir.getAbsolutePath() + "/../outputs/gradle/build/${rootProject.name}/${project.name}"))

    project.ext {
        if (ANDROID_APP_NDK_VERSION != null) {
            ndkVersion = ANDROID_APP_NDK_VERSION
        } else {
            ndkVersion = "29.0.13113456"
        }

        if (ANDROID_APP_CMAKE_VERSION != null) {
            cmakeVersion = ANDROID_APP_CMAKE_VERSION
        } else {
            cmakeVersion = "3.31.6"
        }

        if (ANDROID_APP_MIN_SDK_VERSION != null) {
            minSdkVersion = ANDROID_APP_MIN_SDK_VERSION
        } else {
            minSdkVersion = 23
        }

        if (ANDROID_APP_TARGET_SDK_VERSION != null) {
            targetSdkVersion = ANDROID_APP_TARGET_SDK_VERSION
        } else {
            targetSdkVersion = 35
        }

        if (ANDROID_APP_COMPILE_SDK_VERSION != null) {
            compileSdkVersion = ANDROID_APP_COMPILE_SDK_VERSION
        } else {
            compileSdkVersion = 35
        }

        javaVersion = JavaVersion.VERSION_17
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile).tap {
            configureEach {
                options.encoding = 'UTF-8'
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            }
        }
    }

    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }

        if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN") == true) {
            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_BIDMACHINE") == true) {
                maven { url "https://artifactory.bidmachine.io/bidmachine" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_CHARTBOOST") == true) {
                maven { url "https://cboost.jfrog.io/artifactory/chartboost-ads/" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_IRONSOURCE") == true) {
                maven { url "https://android-sdk.is.com" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_MAIO") == true) {
                maven { url "https://imobile-maio.github.io/maven" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_MINTEGRAL") == true) {
                maven { url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_OGURY") == true) {
                maven { url "https://maven.ogury.co" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_PANGLE") == true) {
                maven { url "https://artifact.bytedance.com/repository/pangle" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_PUBMATIC") == true) {
                maven { url "https://repo.pubmatic.com/artifactory/public-repos" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_SMAATO") == true) {
                maven { url "https://s3.amazonaws.com/smaato-sdk-releases/" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_VERVE") == true) {
                maven { url "https://verve.jfrog.io/artifactory/verve-gradle-release" }
            }

            if (Utils.existAppPlugin("MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_YSO") == true) {
                maven { url "https://ysonetwork.s3.eu-west-3.amazonaws.com/sdk/android" }
            }
        }
    }
}