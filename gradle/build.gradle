import com.Mengine.Utils

buildscript {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN") == true) {
            maven { url 'https://artifacts.applovin.com/android' }
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_GOOGLE_SERVICE") == true) {
            classpath 'com.google.gms:google-services:4.3.15'
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_FIREBASE_CRASHLYTICS") == true) {
            classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_FIREBASE_PERFORMANCEMONITORING") == true) {
            classpath 'com.google.firebase:perf-plugin:1.4.2'
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN") == true) {
            classpath 'com.applovin.quality:AppLovinQualityServiceGradlePlugin:4.11.1'
        }
    }
}

def ANDROID_APP_NDK_VERSION = Utils.getStringProperty(project, "ANDROID_APP_NDK_VERSION", "25.1.8937393")
def ANDROID_APP_BUILD_TOOLS_VERSION = Utils.getStringProperty(project, "ANDROID_APP_BUILD_TOOLS_VERSION", "33.0.2")
def ANDROID_APP_CMAKE_VERSION = Utils.getStringProperty(project, "ANDROID_APP_CMAKE_VERSION", "3.22.1")
def ANDROID_APP_MULTIDEX_ENABLE = Utils.getBooleanProperty(project, "ANDROID_APP_MULTIDEX_ENABLE", true)
def ANDROID_APP_MIN_SDK_VERSION = Utils.getIntegerProperty(project, "ANDROID_APP_MIN_SDK_VERSION", 21)
def ANDROID_APP_TARGET_SDK_VERSION = Utils.getIntegerProperty(project, "ANDROID_APP_TARGET_SDK_VERSION", 33)
def ANDROID_APP_COMPILE_SDK_VERSION = Utils.getIntegerProperty(project, "ANDROID_APP_COMPILE_SDK_VERSION", 33)

allprojects {
    project.ext {
        ndkVersion = ANDROID_APP_NDK_VERSION
        buildToolsVersion = ANDROID_APP_BUILD_TOOLS_VERSION
        cmakeVersion = ANDROID_APP_CMAKE_VERSION
        multiDexEnabled = ANDROID_APP_MULTIDEX_ENABLE
        minSdkVersion = ANDROID_APP_MIN_SDK_VERSION
        targetSdkVersion = ANDROID_APP_TARGET_SDK_VERSION
        compileSdkVersion = ANDROID_APP_COMPILE_SDK_VERSION

        javaVersion = JavaVersion.VERSION_17
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.encoding = 'UTF-8'
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

    repositories {
        google()
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_BIDMACHINE") == true) {
            maven { url "https://artifactory.bidmachine.io/bidmachine" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_CHARTBOOST") == true) {
            maven { url "https://cboost.jfrog.io/artifactory/chartboost-ads/" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_IRONSOURCE") == true) {
            maven { url "https://android-sdk.is.com" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_MAIO") == true) {
            maven { url "https://imobile-maio.github.io/maven" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_MINTEGRAL") == true) {
            maven { url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_NEND") == true) {
            maven { url "https://fan-adn.github.io/nendSDK-Android-lib/library" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_OGURY") == true) {
            maven { url "https://maven.ogury.co" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_PANGLE") == true) {
            maven { url "https://artifact.bytedance.com/repository/pangle" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_SMAATO") == true) {
            maven { url "https://s3.amazonaws.com/smaato-sdk-releases/" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_TAPJOY") == true) {
            maven { url "https://sdk.tapjoy.com" }
        }

        if (Utils.existAppPlugin(project, "MENGINE_APP_PLUGIN_APPLOVIN_MEDIATION_VERVE") == true) {
            maven { url "https://verve.jfrog.io/artifactory/verve-gradle-release" }
        }
    }
}