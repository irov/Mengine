import com.Mengine.Utils

def ANDROID_APP_SPLIT_ENABLE = Utils.getBooleanProperty(project, "ANDROID_APP_SPLIT_ENABLE", false)
def ANDROID_APP_ARCH_86_64_ENABLE = Utils.getBooleanProperty(project, "ANDROID_APP_ARCH_86_64_ENABLE", true)

apply plugin: 'com.android.library'

android {
    ndkVersion project.ndkVersion
    buildToolsVersion project.buildToolsVersion
    compileSdkVersion project.compileSdkVersion

    compileOptions {
        sourceCompatibility project.javaVersion
        targetCompatibility project.javaVersion
    }

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion

        multiDexEnabled true

        if (ANDROID_APP_SPLIT_ENABLE == false) {
            ndk {
                if (ANDROID_APP_ARCH_86_64_ENABLE == true) {
                    abiFilters "arm64-v8a", "armeabi-v7a", "x86_64"
                } else {
                    abiFilters "arm64-v8a", "armeabi-v7a"
                }
            }
        }
    }
    
    splits {
        abi {
            if (ANDROID_APP_SPLIT_ENABLE == true) {
                enable true
            } else {
                enable false
            }
            
            reset() //reset the list of ABIs to be included to an empty string

            if (ANDROID_APP_ARCH_86_64_ENABLE == true) {
                include "arm64-v8a", "armeabi-v7a", "x86_64"
            } else {
                include "arm64-v8a", "armeabi-v7a"
            }
            
            universalApk false
        }
    }
    
    externalNativeBuild {
        cmake {
            version project.cmakeVersion
        }
    }

    buildTypes {
        debug {

            externalNativeBuild {
                cmake {
                    cFlags "-std=c11 -g -O0 -D_DEBUG"
                    cppFlags "-std=c++17 -frtti -fexceptions -g -O0 -D_DEBUG"
                    arguments "-DANDROID_PLATFORM=android-" + project.minSdkVersion,
                            "-DANDROID_ARM_NEON=TRUE",
                            "-DANDROID_STL=c++_shared",
                            "-DANDROID_TOOLCHAIN=clang",
                            "-DCMAKE_BUILD_TYPE:STRING=Debug",
                            "-DLIBTYPE=SHARED",
                            "-DOPENAL_SHARED:BOOLEAN=ON",
                            "-DALSOFT_DLOPEN:BOOLEAN=OFF",
                            "-DALSOFT_WERROR:BOOLEAN=OFF",
                            "-DALSOFT_UTILS:BOOLEAN=OFF",
                            "-DALSOFT_NO_CONFIG_UTIL:BOOLEAN=ON",
                            "-DALSOFT_EXAMPLES:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_CONFIG:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_HRTF_DATA:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_AMBDEC_PRESETS:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_EXAMPLES:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_UTILS:BOOLEAN=OFF",
                            "-DALSOFT_UPDATE_BUILD_VERSION:BOOLEAN=OFF",
                            "-DALSOFT_BUILD_IMPORT_LIB:BOOLEAN=OFF",
                            "-DALSOFT_BUILD_ROUTER:BOOLEAN=OFF",
                            "-DALSOFT_EMBED_HRTF_DATA:BOOLEAN=OFF",
                            "-DALSOFT_OSX_FRAMEWORK:BOOLEAN=OFF",
                            "-DALSOFT_STATIC_LIBGCC:BOOLEAN=OFF",
                            "-DALSOFT_STATIC_STDCXX:BOOLEAN=OFF",
                            "-DALSOFT_BACKEND_WAVE:BOOLEAN=ON",
                            "-DALSOFT_REQUIRE_SDL2:BOOLEAN=OFF",
                            "-DALSOFT_REQUIRE_OPENSL:BOOLEAN=ON",
                            "-DALSOFT_EMBED_HRTF_DATA:BOOLEAN=OFF"
                }
            }
        }

        release {
            externalNativeBuild {
                cmake {
                    cFlags "-std=c11 -O3 -DNDEBUG"
                    cppFlags "-std=c++17 -frtti -fexceptions -O3 -DNDEBUG"
                    arguments "-DANDROID_PLATFORM=android-" + project.minSdkVersion,
                            "-DANDROID_ARM_NEON=TRUE",
                            "-DANDROID_STL=c++_shared",
                            "-DANDROID_TOOLCHAIN=clang",
                            "-DCMAKE_BUILD_TYPE:STRING=Release",
                            "-DLIBTYPE=SHARED",
                            "-DOPENAL_SHARED:BOOLEAN=ON",
                            "-DALSOFT_DLOPEN:BOOLEAN=OFF",
                            "-DALSOFT_WERROR:BOOLEAN=OFF",
                            "-DALSOFT_UTILS:BOOLEAN=OFF",
                            "-DALSOFT_NO_CONFIG_UTIL:BOOLEAN=ON",
                            "-DALSOFT_EXAMPLES:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_CONFIG:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_HRTF_DATA:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_AMBDEC_PRESETS:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_EXAMPLES:BOOLEAN=OFF",
                            "-DALSOFT_INSTALL_UTILS:BOOLEAN=OFF",
                            "-DALSOFT_UPDATE_BUILD_VERSION:BOOLEAN=OFF",
                            "-DALSOFT_BUILD_IMPORT_LIB:BOOLEAN=OFF",
                            "-DALSOFT_BUILD_ROUTER:BOOLEAN=OFF",
                            "-DALSOFT_EMBED_HRTF_DATA:BOOLEAN=OFF",
                            "-DALSOFT_OSX_FRAMEWORK:BOOLEAN=OFF",
                            "-DALSOFT_STATIC_LIBGCC:BOOLEAN=OFF",
                            "-DALSOFT_STATIC_STDCXX:BOOLEAN=OFF",
                            "-DALSOFT_BACKEND_WAVE:BOOLEAN=ON",
                            "-DALSOFT_REQUIRE_SDL2:BOOLEAN=OFF",
                            "-DALSOFT_REQUIRE_OPENSL:BOOLEAN=ON",
                            "-DALSOFT_EMBED_HRTF_DATA:BOOLEAN=OFF"
                }
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "../../../dependencies/openal-soft/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
