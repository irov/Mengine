
CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )

MACRO( ADD_FILTER group_name )
	SOURCE_GROUP( ${group_name} FILES ${ARGN} )
	SET( SRC_FILES ${SRC_FILES} ${ARGN} )
	#MESSAGE( ${ARGN} )
ENDMACRO( ADD_FILTER group_name files )

# solution

PROJECT( Mengine )

SET( MENGINE_REPOSITORY ${Mengine_SOURCE_DIR}/.. )
SET( MENGINE_LIB_PREFIX )
SET( MENGINE_LIB_SUFFIX )
#SET( MENGINE_LIB_DIR "lib" )

# output paths
SET( LIBRARY_OUTPUT_PATH ${MENGINE_REPOSITORY}/lib )

SET( EXECUTABLE_OUTPUT_PATH ${MENGINE_REPOSITORY}/bin )
SET( EXECUTABLE_OUTPUT_PATH_Release ${MENGINE_REPOSITORY}/bin )
SET( EXECUTABLE_OUTPUT_PATH_Debug ${MENGINE_REPOSITORY}/bin_d )

# input and thirdparty paths
SET( THIRDPARTY_DIR ${MENGINE_REPOSITORY}/dependencies )

# implementation

if (NOT MSVC)
	ADD_DEFINITIONS(-D'override = /* */')
else(NOT MSVC)
	ADD_DEFINITIONS(-D_SCL_SECURE_NO_WARNINGS)
endif(NOT MSVC)

if( NOT MSVC )
	SET( MENGINE_LIB_PREFIX "lib" )
	SET( MENGINE_LIB_SUFFIX ".a" )
else( NOT MSVC )
	SET( MENGINE_LIB_PREFIX "lib" )
	SET( MENGINE_LIB_SUFFIX ".lib" )
endif( NOT MSVC )

if( WIN32 )
	ADD_DEFINITIONS( -DUNICODE )
endif( WIN32 )

SET( MENGE_DEPENDENCIES )
SET( APPLICATION_DEPENDENCIES )
SET( APPLICATION_LIBS )
SET( APPLICATION_LIB_PATHS )

SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/${MENGINE_LIB_DIR} )
SET( CMAKE_BUILD_TYPE Release )

INCLUDE_DIRECTORIES( ${Mengine_SOURCE_DIR} )
ADD_SUBDIRECTORY( libs )

ADD_SUBDIRECTORY( Menge )
ADD_DEPENDENCIES( Menge
	${MENGE_DEPENDENCIES}
)

ADD_SUBDIRECTORY( System )

LINK_DIRECTORIES( ${APPLICATION_LIB_PATHS} )
IF( WIN32 )
	ADD_SUBDIRECTORY( WinApplication )
	ADD_DEPENDENCIES( WinApplication ${APPLICATION_DEPENDENCIES} )

ELSEIF( APPLE )
	ADD_SUBDIRECTORY( MacOSApplication )
	ADD_DEPENDENCIES( MacOSApplication ${APPLICATION_DEPENDENCIES} )

ENDIF( WIN32 )