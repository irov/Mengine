MENGINE_PROJECT(Config)

SET(MENGINE_ENGINE_GIT_SHA1 "0000000000000000000000000000000000000000")
SET(MENGINE_ENGINE_GIT_URL "NONE-URL")
SET(MENGINE_ENGINE_GIT_BRANCH "UNKNOWN-BRANCH")
SET(MENGINE_ENGINE_GIT_DATE "UNKNOWN-DATE")

find_package(Git)
MESSAGE("GIT_EXECUTABLE: ${GIT_EXECUTABLE}")

if(Git_FOUND)
    execute_process(
        COMMAND "${GIT_EXECUTABLE}" rev-parse HEAD
        WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
        OUTPUT_VARIABLE MENGINE_ENGINE_GIT_SHA1
        ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE
        )

    execute_process(
        COMMAND "${GIT_EXECUTABLE}" config --get remote.origin.url
        WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
        OUTPUT_VARIABLE MENGINE_ENGINE_GIT_URL
        ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE
        )
        
    execute_process(
        COMMAND "${GIT_EXECUTABLE}" rev-parse --abbrev-ref HEAD
        WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
        OUTPUT_VARIABLE MENGINE_ENGINE_GIT_BRANCH
        ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE
        )

    execute_process(
        COMMAND "${GIT_EXECUTABLE}" show -s --format=%ci HEAD
        WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
        OUTPUT_VARIABLE MENGINE_ENGINE_GIT_DATE
        ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE
        )
endif()

MESSAGE("MENGINE_ENGINE_GIT_SHA1: ${MENGINE_ENGINE_GIT_SHA1}")
MESSAGE("MENGINE_ENGINE_GIT_URL: ${MENGINE_ENGINE_GIT_URL}")
MESSAGE("MENGINE_ENGINE_GIT_BRANCH: ${MENGINE_ENGINE_GIT_BRANCH}")
MESSAGE("MENGINE_ENGINE_GIT_DATE: ${MENGINE_ENGINE_GIT_DATE}")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/GitSHA1.h.in ${CMAKE_CURRENT_SOURCE_DIR}/GitSHA1.h @ONLY)

string(TIMESTAMP MENGINE_BUILD_TIMESTAMP "%Y-%m-%d %H:%M:%S")

set(MENGINE_BUILD_USERNAME $ENV{USERNAME} CACHE STRING "MENGINE_BUILD_USERNAME")
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/BuildInfo.h.in ${CMAKE_CURRENT_SOURCE_DIR}/BuildInfo.h @ONLY)

MESSAGE("MENGINE_BUILD_USERNAME: ${MENGINE_BUILD_USERNAME}")
MESSAGE("MENGINE_BUILD_TIMESTAMP: ${MENGINE_BUILD_TIMESTAMP}")

SET(DEFINITIONS_BUFFER "")

STRING(APPEND DEFINITIONS_BUFFER "#pragma once\n")
STRING(APPEND DEFINITIONS_BUFFER "\n")
STRING(APPEND DEFINITIONS_BUFFER "#if defined(__MENGINE_CONFIG_DEFINITIONS__)\n")

foreach(DEFINITION ${MENGINE_CONFIG_DEFINITIONS})
    STRING(APPEND DEFINITIONS_BUFFER "#define ${DEFINITION}\n")
endforeach()

STRING(APPEND DEFINITIONS_BUFFER "#endif\n")

FILE(WRITE ${CMAKE_BINARY_DIR}/Definitions.h ${DEFINITIONS_BUFFER})

ADD_FILTER(
src
    Char.h
    Utf8.h
    Typedef.h
    Typeinfo.h
    Atomic.h
    Lambda.h
    Config.h
    Export.h
    Abs.h
    StdInt.h
    StdDef.h
    StdIntTypes.h
    StdArg.h
    StdIO.h
    StdLib.h
    StdString.h
    StdLocale.h
    StdCType.h
    StdMath.h
    Limits.h
    UInt32ToPointer.h
    Metaprogramming.h
    GitSHA1.h
    BuildInfo.h
    UniqueId.h
    Algorithm.h
    Numeric.h
    Iterator.h
    Timestamp.h
    Thread.h
    Switch.h
    Utility.h
    ${CMAKE_BINARY_DIR}/Definitions.h
)

ADD_MENGINE_INTERFACE()