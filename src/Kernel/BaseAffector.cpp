#include "Kernel/BaseAffector.h"

namespace Mengine
{
    //////////////////////////////////////////////////////////////////////////
    BaseAffector::BaseAffector()
    {
    }
    //////////////////////////////////////////////////////////////////////////
    BaseAffector::~BaseAffector()
    {
    }
    //////////////////////////////////////////////////////////////////////////
    void BaseAffector::setCallback( const AffectorCallbackInterfacePtr & _cb )
    {
        m_cb = _cb;
    }
    //////////////////////////////////////////////////////////////////////////
    const AffectorCallbackInterfacePtr & BaseAffector::getCallback() const
    {
        return m_cb;
    }
    //////////////////////////////////////////////////////////////////////////
    void BaseAffector::_complete( bool _isEnd )
    {
        if( m_cb != nullptr )
        {
            AffectorCallbackInterfacePtr cb = std::move( m_cb );
            cb->onAffectorEnd( _isEnd );
        }
    }
    //////////////////////////////////////////////////////////////////////////
}
