#include "Surface.h"

#include "Kernel/Logger.h"

namespace Mengine
{
    //////////////////////////////////////////////////////////////////////////
    Surface::Surface()
        : m_anchor( 0.f, 0.f )
    {
    }
    //////////////////////////////////////////////////////////////////////////
    Surface::~Surface()
    {
    }
    //////////////////////////////////////////////////////////////////////////
    void Surface::setAnchor( const mt::vec2f & _anchor )
    {
        m_anchor = _anchor;
    }
    //////////////////////////////////////////////////////////////////////////
    const mt::vec2f & Surface::getAnchor() const
    {
        return m_anchor;
    }
    //////////////////////////////////////////////////////////////////////////
    bool Surface::initialize()
    {
        bool successful = this->_initialize();

        return successful;
    }
    //////////////////////////////////////////////////////////////////////////
    bool Surface::_initialize()
    {
        //Empty;

        return true;
    }
    //////////////////////////////////////////////////////////////////////////
    void Surface::activate()
    {
        this->_activate();
    }
    //////////////////////////////////////////////////////////////////////////
    void Surface::deactivate()
    {
        this->_deactivate();
    }
    //////////////////////////////////////////////////////////////////////////
    void Surface::_activate()
    {
        //Empty
    }
    //////////////////////////////////////////////////////////////////////////
    void Surface::_deactivate()
    {
        //Empty
    }
    //////////////////////////////////////////////////////////////////////////
    bool Surface::update( const UpdateContext * _context )
    {
        MENGINE_UNUSED( _context );

        //Empty;

        return false;
    }
}