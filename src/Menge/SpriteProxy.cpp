//#include "SpriteProxy.h"
//
//namespace Menge
//{
//	//////////////////////////////////////////////////////////////////////////
//	SpriteProxy::SpriteProxy(Sprite * _spr) : NodeProxy(_spr), m_Sprite(_spr)
//	{
//	}
//	//////////////////////////////////////////////////////////////////////////
//	void SpriteProxy::stop()
//	{
//		return	m_Sprite->stop();
//	}
//	//////////////////////////////////////////////////////////////////////////
//	void SpriteProxy::play()
//	{
//		return	m_Sprite->play();
//	}
//	//////////////////////////////////////////////////////////////////////////
//	void SpriteProxy::setLooped(bool _looped)
//	{
//		return	m_Sprite->setLooped(_looped);
//	}
//	//////////////////////////////////////////////////////////////////////////
//	bool SpriteProxy::getLooped() const
//	{
//		return m_Sprite->getLooped();
//	}
//	//////////////////////////////////////////////////////////////////////////
//	void SpriteProxy::setFirstFrame()
//	{
//		return	m_Sprite->setFirstFrame();
//	}
//	//////////////////////////////////////////////////////////////////////////
//	void SpriteProxy::nextFrame()
//	{
//		return	m_Sprite->nextFrame();
//	}
//	//////////////////////////////////////////////////////////////////////////
//	void SpriteProxy::prevFrame()
//	{
//		return	m_Sprite->prevFrame();
//	}
//	//////////////////////////////////////////////////////////////////////////
//	void SpriteProxy::setOffset(const mt::vec2f& _offset)
//	{
//		return	m_Sprite->setOffset(_offset);
//	}
//	//////////////////////////////////////////////////////////////////////////
//	bool SpriteProxy::isVisible(const Viewport & _viewPort)
//	{
//		return	m_Sprite->isVisible(_viewPort);
//	}
//	//////////////////////////////////////////////////////////////////////////
//	void SpriteProxy::loader(TiXmlElement *xml)
//	{
//		return	m_Sprite->loader(xml);
//	}
//	//////////////////////////////////////////////////////////////////////////
//	bool SpriteProxy::render( const Viewport & _viewPort )
//	{
//		return	m_Sprite->render(_viewPort);
//	}
//};