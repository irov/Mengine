#include "CollisionShapes.h"
//////////////////////////////////////////////////////////////////////////
BoxShape::BoxShape(mt::vec2f	_width) 
	: width(_width)
{
	EvaluteBBox(0);
	SetMargin(0.5f);
};
//////////////////////////////////////////////////////////////////////////
bool BoxShape::IsConvex() const
{
	return	true;
}
//////////////////////////////////////////////////////////////////////////
void BoxShape::EvaluteBBox(float _rot)
{
	float c = fabsf(cos(_rot));
	float s = fabsf(sin(_rot));
	BoundingBox.x = (c * width.x + s * width.y) + margin;
	BoundingBox.y = (s * width.x + c * width.y) + margin;
}
//////////////////////////////////////////////////////////////////////////
const mt::vec2f& BoxShape::GetBBoxInfo() const
{
	return	BoundingBox;
}
//////////////////////////////////////////////////////////////////////////
int	BoxShape::GetShapeType() const
{
	return	BOX;
}
//////////////////////////////////////////////////////////////////////////
void BoxShape::SetMargin(float eps)
{
	margin = eps;
}
//////////////////////////////////////////////////////////////////////////
float BoxShape::GetMargin() const
{
	return margin;
}
//////////////////////////////////////////////////////////////////////////
CircleShape::CircleShape(float	_r) 
: radius(_r)
{
	EvaluteBBox(0);
	SetMargin(0.25f);
};
//////////////////////////////////////////////////////////////////////////
bool	CircleShape::IsConvex() const
{
	return	true;
}
//////////////////////////////////////////////////////////////////////////
void CircleShape::EvaluteBBox(float _rot)
{
	BoundingBox.x = radius*2.0f + margin;
	BoundingBox.y = radius*2.0f + margin;
}
//////////////////////////////////////////////////////////////////////////
const mt::vec2f& CircleShape::GetBBoxInfo() const
{
	return BoundingBox;
}
//////////////////////////////////////////////////////////////////////////
int	CircleShape::GetShapeType() const
{
	return	CIRCLE;
}
//////////////////////////////////////////////////////////////////////////
void CircleShape::SetMargin(float eps)
{
	margin = eps;
}
//////////////////////////////////////////////////////////////////////////
float CircleShape::GetMargin() const
{
	return margin;
}