#include "Win32PlatformSystem.h"

//////////////////////////////////////////////////////////////////////////
SERVICE_FACTORY( PlatformSystem, Mengine::Win32PlatformSystem );
//////////////////////////////////////////////////////////////////////////
namespace Mengine
{
    //////////////////////////////////////////////////////////////////////////
    Win32PlatformSystem::Win32PlatformSystem()
    {
    }
    //////////////////////////////////////////////////////////////////////////
    Win32PlatformSystem::~Win32PlatformSystem()
    {
    }
    //////////////////////////////////////////////////////////////////////////
    bool Win32PlatformSystem::_initializeService()
    {
        //Empty
        //size_t t = __STDCPP_DEFAULT_NEW_ALIGNMENT__

        return true;
    }
    //////////////////////////////////////////////////////////////////////////
    void Win32PlatformSystem::_finalizeService()
    {
        //Empty
    }
    //////////////////////////////////////////////////////////////////////////
    bool Win32PlatformSystem::beginThread( ThreadId _threadId )
    {
        MENGINE_UNUSED( _threadId );

        //Empty

        return true;
    }
    //////////////////////////////////////////////////////////////////////////
    void Win32PlatformSystem::endThread( ThreadId _threadId )
    {
        MENGINE_UNUSED( _threadId );

        //Empty
    }
    //////////////////////////////////////////////////////////////////////////
}
