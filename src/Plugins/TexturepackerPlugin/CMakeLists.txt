set(MY_LIB_NAME TexturepackerPlugin)

ADD_FILTER(
src
    TexturepackerInterface.h
    
	TexturepackerPlugin.h
	TexturepackerPlugin.cpp
    TexturepackerPlugin.def
    
    ResourceTexturepacker.cpp
    ResourceTexturepacker.h
	
	LoaderResourceTexturepacker.cpp
	LoaderResourceTexturepacker.h

    TexturepackerScriptEmbedding.cpp
    TexturepackerScriptEmbedding.h
)

INCLUDE_DIRECTORIES(${THIRDPARTY_DIR}/jansson/include)
INCLUDE_DIRECTORIES(${THIRDPARTY_DIR}/libmath/include)
INCLUDE_DIRECTORIES(${THIRDPARTY_DIR}/pybind/include)
INCLUDE_DIRECTORIES(${THIRDPARTY_DIR}/jpp/include)
INCLUDE_DIRECTORIES(${THIRDPARTY_DIR}/metabuf/include)

ADD_MENGINE_PLUGIN(MENGINE_PLUGIN_TEXTUREPACKER)

set_target_properties (${MY_LIB_NAME} PROPERTIES
    FOLDER Plugins
)

IF(MENGINE_BUILD_TYPE_DEBUG)
    SET(MENGINE_JSON_DEBUG_SUFFIX "_d")
ELSEIF(MENGINE_BUILD_TYPE_RELWITHDEBINFO)
    SET(MENGINE_JSON_DEBUG_SUFFIX "_rd")
ELSE(MENGINE_BUILD_TYPE_RELEASE)
    SET(MENGINE_JSON_DEBUG_SUFFIX "")
ENDIF()

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Kernel)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Metacode)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}stdex${MENGINE_LIB_SUFFIX})
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}math${MENGINE_LIB_SUFFIX})
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}pybind${MENGINE_LIB_SUFFIX})
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}metabuf${MENGINE_LIB_SUFFIX})
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}jansson${MENGINE_JSON_DEBUG_SUFFIX}${MENGINE_LIB_SUFFIX})
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}jpp${MENGINE_LIB_SUFFIX})

SET( APPLICATION_DEPENDENCIES
 ${APPLICATION_DEPENDENCIES}
 ${MY_LIB_NAME}
)

SET( APPLICATION_DEPENDENCIES
 ${APPLICATION_DEPENDENCIES}
 PARENT_SCOPE
)

SET( APPLICATION_LIB_PATHS
 ${APPLICATION_LIB_PATHS}
 PARENT_SCOPE
)

SET( APPLICATION_LIBS
 ${APPLICATION_LIBS} 
 PARENT_SCOPE
)