MENGINE_PROJECT(cURLPlugin)

ADD_FILTER(
src
    cURLPlugin.h
    cURLPlugin.cpp
    cURLPlugin.def
    
    cURLHttpSystem.cpp
    cURLHttpSystem.h
    
    cURLHttpResponse.cpp
    cURLHttpResponse.h
    
    cURLHttpRequestThreadTask.cpp
    cURLHttpRequestThreadTask.h
    cURLHttpRequestGetAssetThreadTask.cpp
    cURLHttpRequestGetAssetThreadTask.h
    cURLHttpRequestGetMessageThreadTask.cpp
    cURLHttpRequestGetMessageThreadTask.h
    cURLHttpRequestHeaderDataThreadTask.cpp
    cURLHttpRequestHeaderDataThreadTask.h
    cURLHttpRequestPostMessageThreadTask.cpp
    cURLHttpRequestPostMessageThreadTask.h
    cURLHttpRequestDeleteMessageThreadTask.cpp
    cURLHttpRequestDeleteMessageThreadTask.h
    
    cURLHttpErrorHelper.cpp
    cURLHttpErrorHelper.h
)

add_definitions(-DCURL_STATICLIB)

INCLUDE_DIRECTORIES(${THIRDPARTY_DIR}/curl/include)
INCLUDE_DIRECTORIES(${THIRDPARTY_DIR}/openssl/include)

ADD_MENGINE_PLUGIN(MENGINE_PLUGIN_CURL)

IF(MENGINE_TARGET_WINDOWS)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}curl${MENGINE_LIB_SUFFIX})
ENDIF()

IF(MENGINE_TARGET_APPLE)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/curl${MENGINE_LIB_SUFFIX})
ENDIF()

IF(MENGINE_TARGET_UNIX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/curl${MENGINE_LIB_SUFFIX})
ENDIF()

IF(MENGINE_TARGET_ANDROID)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/curl${MENGINE_LIB_SUFFIX})
ENDIF()

IF(MENGINE_TARGET_WINDOWS)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ws2_32.lib)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Crypt32.lib)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} Bcrypt.lib)
ENDIF()

IF(MENGINE_TARGET_ANDROID)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}ssl_1_1${MENGINE_LIB_SUFFIX})
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}crypto_1_1${MENGINE_LIB_SUFFIX})
ENDIF()

IF(MENGINE_TARGET_UNIX)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}ssl${MENGINE_LIB_SUFFIX})
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}crypto${MENGINE_LIB_SUFFIX})
ENDIF()

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}stdex${MENGINE_LIB_SUFFIX})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}zlib${MENGINE_LIB_SUFFIX})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} Kernel)