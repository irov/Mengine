#include "cURLResponse.h"

namespace Mengine
{
    //////////////////////////////////////////////////////////////////////////
    cURLResponse::cURLResponse()
        : m_requestId( 0 )
        , m_status( CURLE_OK )
        , m_code( 0 )
        , m_successful( false )
    {
    }
    //////////////////////////////////////////////////////////////////////////
    cURLResponse::~cURLResponse()
    {
    }
    //////////////////////////////////////////////////////////////////////////
    void cURLResponse::setRequestId( HttpRequestID _requestId )
    {
        m_requestId = _requestId;
    }
    //////////////////////////////////////////////////////////////////////////
    void cURLResponse::setStatus( CURLcode _status )
    {
        m_status = _status;
    }
    //////////////////////////////////////////////////////////////////////////
    void cURLResponse::appendHeaders( const Char * _ptr, size_t _size )
    {
        m_headers.emplace_back( _ptr, _size );
    }
    //////////////////////////////////////////////////////////////////////////
    void cURLResponse::appendData( const Char * _ptr, size_t _size )
    {
        m_data.append( _ptr, _size );
    }
    //////////////////////////////////////////////////////////////////////////
    void cURLResponse::setCode( uint32_t _code )
    {
        m_code = _code;
    }
    //////////////////////////////////////////////////////////////////////////
    void cURLResponse::setError( const String & _error )
    {
        m_error = _error;
    }
    //////////////////////////////////////////////////////////////////////////
    void cURLResponse::setSuccessful( bool _successful )
    {
        m_successful = _successful;
    }
    //////////////////////////////////////////////////////////////////////////
    HttpRequestID cURLResponse::getRequestId() const
    {
        return m_requestId;
    }
    //////////////////////////////////////////////////////////////////////////
    uint32_t cURLResponse::getStatus() const
    {
        return (uint32_t)m_status;
    }
    //////////////////////////////////////////////////////////////////////////
    const cURLHeaders & cURLResponse::getHeaders() const
    {
        return m_headers;
    }
    //////////////////////////////////////////////////////////////////////////
    const String & cURLResponse::getData() const
    {
        return m_data;
    }
    //////////////////////////////////////////////////////////////////////////
    uint32_t cURLResponse::getCode() const
    {
        return m_code;
    }
    //////////////////////////////////////////////////////////////////////////
    const String & cURLResponse::getError() const
    {
        return m_error;
    }
    //////////////////////////////////////////////////////////////////////////
    bool cURLResponse::isSuccessful() const
    {
        return m_successful;
    }
    //////////////////////////////////////////////////////////////////////////
}