#include "Semaphore.h"

namespace Mengine
{
    //////////////////////////////////////////////////////////////////////////
    Semaphore::Semaphore()
        : m_activated( false )
    {
    }
    //////////////////////////////////////////////////////////////////////////
    Semaphore::~Semaphore()
    {
    }
    //////////////////////////////////////////////////////////////////////////
    void Semaphore::initalize( bool _activated )
    {
        m_activated = _activated;
    }
    //////////////////////////////////////////////////////////////////////////
    void Semaphore::finalize()
    {
        m_listeners.clear();
    }
    //////////////////////////////////////////////////////////////////////////
    bool Semaphore::isActivated() const
    {
        return m_activated;
    }
    //////////////////////////////////////////////////////////////////////////
    VectorSemaphoreListeners Semaphore::activate()
    {
        m_activated = true;

        return std::move( m_listeners );
    }
    //////////////////////////////////////////////////////////////////////////
    void Semaphore::addListener( const SemaphoreListenerInterfacePtr & _listener )
    {
        m_listeners.emplace_back( _listener );
    }
    //////////////////////////////////////////////////////////////////////////
}
