#pragma once

#include "Interface/ServiceProviderInterface.h"

#include "Environment/OpenGL/OpenGLRenderIncluder.h"

#include "Config/Char.h"

//////////////////////////////////////////////////////////////////////////
namespace Mengine
{
    namespace Helper
    {
        const Char * glGetErrorString( GLenum _err );
        bool OpenGLRenderErrorCheck( const Char * _file, uint32_t _line );
    }
}
//////////////////////////////////////////////////////////////////////////
#if MENGINE_RENDER_CHECK_ERROR
//////////////////////////////////////////////////////////////////////////
#   define OPENGL_RENDER_CHECK_ERROR() Mengine::Helper::OpenGLRenderErrorCheck( __FILE__, __LINE__ )
#   define OPENGL_RENDER_CHECK_ERROR_IF() if( OPENGL_RENDER_CHECK_ERROR() == true )
//////////////////////////////////////////////////////////////////////////
#else
//////////////////////////////////////////////////////////////////////////
#   define OPENGL_RENDER_CHECK_ERROR() (false)
#   define OPENGL_RENDER_CHECK_ERROR_IF() for( ;false; )
//////////////////////////////////////////////////////////////////////////
#endif
//////////////////////////////////////////////////////////////////////////
#define GLCALL( Method, Args )\
    do{\
        Method Args;\
        OPENGL_RENDER_CHECK_ERROR();\
    }while(false)
//////////////////////////////////////////////////////////////////////////
#define GLCALLR( R, Method, Args )\
    do{\
        R = Method Args;\
        OPENGL_RENDER_CHECK_ERROR();\
    }while(false)
//////////////////////////////////////////////////////////////////////////
#define IF_GLCALLR( R, Method, Args )\
    R = Method Args;\
    OPENGL_RENDER_CHECK_ERROR_IF()
//////////////////////////////////////////////////////////////////////////
#define IF_GLCALL( Method, Args )\
    Method Args;\
    OPENGL_RENDER_CHECK_ERROR_IF()
//////////////////////////////////////////////////////////////////////////