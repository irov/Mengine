set( MY_LIB_NAME Metawrite )

ADD_FILTER(
src
    Metawrite.cpp
)

INCLUDE_DIRECTORIES( 
    ${THIRDPARTY_DIR}/tiniini/include
    ${THIRDPARTY_DIR}/libmath/include
    )

LINK_DIRECTORIES( ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY} )
ADD_EXECUTABLE( ${MY_LIB_NAME} WIN32 ${SRC_FILES} )

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Kernel)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} CodecService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} FileService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} LoggerService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ProviderService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} StringizeService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} MemoryService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} DataService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ThreadService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ArchiveService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ConfigService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} PluginService)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} TextService)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ToolUtils)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Win32UnicodeSystem)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Win32ThreadSystem)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Win32FileGroupPlugin)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ZipPlugin)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} LZ4Plugin)

TARGET_LINK_LIBRARIES( ${MY_LIB_NAME}
    ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}stdex${MENGINE_LIB_SUFFIX}
    ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}lz4${MENGINE_LIB_SUFFIX}
    ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}metabuf${MENGINE_LIB_SUFFIX}
    ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}tinyini${MENGINE_LIB_SUFFIX}
    ${THIRDPARTY_LIB_DIR}/${MENGINE_LIB_PREFIX}math${MENGINE_LIB_SUFFIX}
    Shlwapi.lib
    )   
    
foreach(dependency ${APPLICATION_DEPENDENCIES})
	#MESSAGE( ${LIB_PREFIX}${dependency}${MENGINE_LIB_SUFFIX} )
	TARGET_LINK_LIBRARIES( ${MY_LIB_NAME} debug ${dependency} )
	TARGET_LINK_LIBRARIES( ${MY_LIB_NAME} optimized ${dependency} )
endforeach(dependency ${APPLICATION_DEPENDENCIES})    

TARGET_LINK_LIBRARIES( ${MY_LIB_NAME} ${APPLICATION_LIBS} comctl32 )