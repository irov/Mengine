[1mdiff --git a/src/Tasks/TaskTransformationAlphaTime.cpp b/src/Tasks/TaskTransformationAlphaTime.cpp[m
[1mdeleted file mode 100644[m
[1mindex bff29f82c..000000000[m
[1m--- a/src/Tasks/TaskTransformationAlphaTime.cpp[m
[1m+++ /dev/null[m
[36m@@ -1,140 +0,0 @@[m
[31m-#include "TaskTransformationAlphaTime.h"[m
[31m-[m
[31m-#include "Kernel/FactorableUnique.h"[m
[31m-[m
[31m-namespace Mengine[m
[31m-{[m
[31m-    //////////////////////////////////////////////////////////////////////////[m
[31m-    namespace Detail[m
[31m-    {[m
[31m-        class TaskTransformationAlphaTimeAffector[m
[31m-            : public Affector[m
[31m-        {[m
[31m-        public:[m
[31m-            TaskTransformationAlphaTimeAffector( const TaskTransformationAlphaTimePtr & _task, const RenderInterfacePtr & _renderable, float _from, float _to, float _time )[m
[31m-                : m_task( _task )[m
[31m-                , m_renderable( _renderable )[m
[31m-                , m_from( _from )[m
[31m-                , m_to( _to )[m
[31m-                , m_progress( 0.f )[m
[31m-                , m_time( _time )[m
[31m-            {[m
[31m-            }[m
[31m-[m
[31m-            ~TaskTransformationAlphaTimeAffector() override[m
[31m-            {[m
[31m-            }[m
[31m-[m
[31m-        public:[m
[31m-            bool _affect( const UpdateContext * _context, float * _used ) override[m
[31m-            {[m
[31m-                float time = _context->time;[m
[31m-[m
[31m-                if( m_progress + time < m_time )[m
[31m-                {[m
[31m-                    *_used = time;[m
[31m-[m
[31m-                    m_progress += time;[m
[31m-[m
[31m-                    float t = m_progress / m_time;[m
[31m-[m
[31m-                    const EasingInterfacePtr & easing = this->getEasing();[m
[31m-[m
[31m-                    float t_easing = easing->easing( t );[m
[31m-                    MENGINE_UNUSED( t_easing );[m
[31m-[m
[31m-                    m_renderable->setLocalAlpha( m_from );[m
[31m-[m
[31m-                    return false;[m
[31m-                }[m
[31m-[m
[31m-                *_used = m_time - m_progress;[m
[31m-[m
[31m-                m_renderable->setLocalAlpha( m_to );[m
[31m-[m
[31m-                return true;[m
[31m-            }[m
[31m-[m
[31m-        protected:[m
[31m-            void _complete( bool _isEnd ) override[m
[31m-            {[m
[31m-                if( _isEnd == true )[m
[31m-                {[m
[31m-                    m_task->complete();[m
[31m-                }[m
[31m-                else[m
[31m-                {[m
[31m-                    m_task->skip();[m
[31m-                }[m
[31m-            }[m
[31m-[m
[31m-        protected:[m
[31m-            TaskTransformationAlphaTimePtr m_task;[m
[31m-[m
[31m-            RenderInterfacePtr m_renderable;[m
[31m-[m
[31m-            float m_from;[m
[31m-            float m_to;[m
[31m-[m
[31m-            float m_progress;[m
[31m-            float m_time;[m
[31m-        };[m
[31m-    }[m
[31m-    //////////////////////////////////////////////////////////////////////////[m
[31m-    TaskTransformationAlphaTime::TaskTransformationAlphaTime( const RenderInterfacePtr & _renderable, const AffectorablePtr & _affectorable, const EasingInterfacePtr & _easing, float  _to, float _time )[m
[31m-        : m_renderable( _renderable )[m
[31m-        , m_affectorable( _affectorable )[m
[31m-        , m_easing( _easing )[m
[31m-        , m_to( _to )[m
[31m-        , m_time( _time )[m
[31m-        , m_id( 0 )[m
[31m-    {[m
[31m-    }[m
[31m-    //////////////////////////////////////////////////////////////////////////[m
[31m-    TaskTransformationAlphaTime::~TaskTransformationAlphaTime()[m
[31m-    {[m
[31m-    }[m
[31m-    //////////////////////////////////////////////////////////////////////////[m
[31m-    bool TaskTransformationAlphaTime::_onRun()[m
[31m-    {[m
[31m-        const float alpha = m_renderable->getLocalAlpha();[m
[31m-[m
[31m-        AffectorPtr affector = Helper::makeFactorableUnique<Detail::TaskTransformationAlphaTimeAffector>( TaskTransformationAlphaTimePtr::from( this ), m_renderable, alpha, m_to, m_time );[m
[31m-[m
[31m-        affector->setEasing( m_easing );[m
[31m-[m
[31m-        AFFECTOR_ID id = m_affectorable->addAffector( affector );[m
[31m-[m
[31m-        if( id == 0 )[m
[31m-        {[m
[31m-            return true;[m
[31m-        }[m
[31m-[m
[31m-        m_id = id;[m
[31m-[m
[31m-        return false;[m
[31m-    }[m
[31m-    //////////////////////////////////////////////////////////////////////////[m
[31m-    void TaskTransformationAlphaTime::_onSkip()[m
[31m-    {[m
[31m-        if( m_id != 0 )[m
[31m-        {[m
[31m-            m_affectorable->stopAffector( m_id );[m
[31m-            m_id = 0;[m
[31m-        }[m
[31m-[m
[31m-        m_renderable->setLocalAlpha( m_to );[m
[31m-    }[m
[31m-    //////////////////////////////////////////////////////////////////////////[m
[31m-    void TaskTransformationAlphaTime::_onFinally()[m
[31m-    {[m
[31m-        if( m_id != 0 )[m
[31m-        {[m
[31m-            m_affectorable->stopAffector( m_id );[m
[31m-            m_id = 0;[m
[31m-        }[m
[31m-[m
[31m-        m_affectorable = nullptr;[m
[31m-        m_renderable = nullptr;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/src/Tasks/TaskTransformationAlphaTime.h b/src/Tasks/TaskTransformationAlphaTime.h[m
[1mdeleted file mode 100644[m
[1mindex 09d013a0b..000000000[m
[1m--- a/src/Tasks/TaskTransformationAlphaTime.h[m
[1m+++ /dev/null[m
[36m@@ -1,38 +0,0 @@[m
[31m-#pragma once[m
[31m-[m
[31m-#include "GOAP/Task.h"[m
[31m-[m
[31m-#include "Interface/RenderInterface.h"[m
[31m-[m
[31m-#include "Kernel/Transformation.h"[m
[31m-#include "Kernel/Affectorable.h"[m
[31m-#include "Kernel/Colorable.h"[m
[31m-[m
[31m-namespace Mengine[m
[31m-{[m
[31m-    class TaskTransformationAlphaTime[m
[31m-        : public GOAP::Task[m
[31m-    {[m
[31m-    public:[m
[31m-        TaskTransformationAlphaTime( const RenderInterfacePtr & _transformation, const AffectorablePtr & _affectorable, const EasingInterfacePtr & _easing, const float _to, float _time );[m
[31m-        ~TaskTransformationAlphaTime() override;[m
[31m-[m
[31m-    protected:[m
[31m-        bool _onRun() override;[m
[31m-        void _onSkip() override;[m
[31m-        void _onFinally() override;[m
[31m-[m
[31m-    protected:[m
[31m-        RenderInterfacePtr m_renderable;[m
[31m-        AffectorablePtr m_affectorable;[m
[31m-        EasingInterfacePtr m_easing;[m
[31m-[m
[31m-        float m_to;[m
[31m-        float m_time;[m
[31m-[m
[31m-        uint32_t m_id;[m
[31m-    };[m
[31m-    //////////////////////////////////////////////////////////////////////////[m
[31m-    typedef GOAP::IntrusivePtr<TaskTransformationAlphaTime> TaskTransformationAlphaTimePtr;[m
[31m-    //////////////////////////////////////////////////////////////////////////[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/src/Tasks/TaskTransformationTranslateTime.cpp b/src/Tasks/TaskTransformationTranslateTime.cpp[m
[1mindex 1d19efc9f..f900b48d4 100644[m
[1m--- a/src/Tasks/TaskTransformationTranslateTime.cpp[m
[1m+++ b/src/Tasks/TaskTransformationTranslateTime.cpp[m
[36m@@ -1,4 +1,4 @@[m
[31m-#include "TaskTransformationTranslateTime.h"[m
[32m+[m[32m#include "TaskColorableAlphaTime.h"[m
 [m
 #include "Kernel/FactorableUnique.h"[m
 [m
[36m@@ -7,11 +7,11 @@[m [mnamespace Mengine[m
     //////////////////////////////////////////////////////////////////////////[m
     namespace Detail[m
     {[m
[31m-        class TaskTransformationTranslateTimeAffector[m
[32m+[m[32m        class TaskColorableAlphaTimeAffector[m
             : public Affector[m
         {[m
         public:[m
[31m-            TaskTransformationTranslateTimeAffector( const TaskTransformationTranslateTimePtr & _task, const TransformationPtr & _transformation, const mt::vec3f & _from, const mt::vec3f & _to, float _time )[m
[32m+[m[32m            TaskColorableAlphaTimeAffector( const TaskColorableAlphaTimePtr & _task, const TransformationPtr & _transformation, const mt::vec3f & _from, const mt::vec3f & _to, float _time )[m
                 : m_task( _task )[m
                 , m_transformation( _transformation )[m
                 , m_from( _from )[m
[36m@@ -21,7 +21,7 @@[m [mnamespace Mengine[m
             {[m
             }[m
 [m
[31m-            ~TaskTransformationTranslateTimeAffector() override[m
[32m+[m[32m            ~TaskColorableAlphaTimeAffector() override[m
             {[m
             }[m
 [m
