 
CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )

MACRO( ADD_FILTER group_name )
	SOURCE_GROUP( ${group_name} FILES ${ARGN} )
	SET( SRC_FILES ${SRC_FILES} ${ARGN} )
	#MESSAGE( ${ARGN} )
ENDMACRO( ADD_FILTER group_name files )
# solution

PROJECT( Mengine_SDL )

SET(MENGINE_TARGET "WIN32")

SET(MENGINE_TARGET_SDL ON)

INCLUDE( ../win32_template.cmake )

SET( MENGINE_REPOSITORY ${CMAKE_CURRENT_SOURCE_DIR}/../.. )

# output paths
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/${MENGINE_LIB_DIR} )
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/bin_sdl )

# input and thirdparty paths
SET( THIRDPARTY_DIR ${MENGINE_REPOSITORY}/dependencies )
SET( SOURCE_DIR ${MENGINE_REPOSITORY}/src )
SET( CMAKE_TEMP_DIR ${MENGINE_REPOSITORY}/CMakeTemp/SDL/${CMAKE_BUILD_TYPE} )

# implementation

SET( MENGE_DEBUG )
string(COMPARE EQUAL CMAKE_BUILD_TYPE Debug MENGE_DEBUG)

ADD_DEFINITIONS(-DMENGINE_MASTER_RELEASE)
ADD_DEFINITIONS(-DMENGE_RENDER_TEXTURE_RGBA)

SET( MENGE_DEPENDENCIES )
SET( APPLICATION_DEPENDENCIES )
SET( APPLICATION_LIBS )
SET( APPLICATION_LIB_PATHS )

INCLUDE_DIRECTORIES( ${SOURCE_DIR} )
INCLUDE_DIRECTORIES( ${SOURCE_DIR}/Utils )
INCLUDE_DIRECTORIES( ${THIRDPARTY_DIR}/boost )
INCLUDE_DIRECTORIES( ${THIRDPARTY_DIR}/stdex/include )

ADD_SUBDIRECTORY( ${SOURCE_DIR} ${CMAKE_TEMP_DIR}/src )

ADD_SUBDIRECTORY( ${SOURCE_DIR}/SDLApplication ${CMAKE_TEMP_DIR}/SDLApplication )

ADD_DEPENDENCIES( SDLApplication ${APPLICATION_DEPENDENCIES} )
