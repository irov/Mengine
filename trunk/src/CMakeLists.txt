
CMAKE_MINIMUM_REQUIRED( VERSION 2.6 )

MACRO( ADD_FILTER group_name )
	SOURCE_GROUP( ${group_name} FILES ${ARGN} )
	SET( SRC_FILES ${SRC_FILES} ${ARGN} )
	#MESSAGE( ${ARGN} )
ENDMACRO( ADD_FILTER group_name files )

INCLUDE( ../dependencies/cmake_scripts/menge_macro.cmake )
# solution

PROJECT( Mengine )

MENGE_SET_PROJECT_DEFAULTS( DummyName )

SET( MENGINE_REPOSITORY ${Mengine_SOURCE_DIR}/.. )
SET( MENGINE_LIB_PREFIX )
SET( MENGINE_LIB_SUFFIX )
#SET( MENGINE_LIB_DIR "lib" )

# output paths
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/${MENGINE_LIB_DIR} )
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${MENGINE_REPOSITORY}/bin )

# input and thirdparty paths
SET( THIRDPARTY_DIR ${MENGINE_REPOSITORY}/dependencies )

# implementation

SET( MENGE_DEBUG )
string(COMPARE EQUAL CMAKE_BUILD_TYPE Debug MENGE_DEBUG)

if (NOT MSVC)
	ADD_DEFINITIONS(-D"override = /* */")
endif(NOT MSVC)

if( NOT MSVC )
	SET( MENGINE_LIB_PREFIX "lib" )
	SET( MENGINE_LIB_SUFFIX ".a" )
else( NOT MSVC )
	SET( MENGINE_LIB_PREFIX "" )
	SET( MENGINE_LIB_SUFFIX ".lib" )
endif( NOT MSVC )

SET( MENGINE_LIB_POSTFIX ${MENGINE_LIB_SUFFIX} )

SET( MENGINE_LIB_SUFFIXD ${CMAKE_DEBUG_POSTFIX}${MENGINE_LIB_SUFFIX} )

if( MENGE_USE_MT )
	SET( MENGINE_LIB_SUFFIX _mt${MENGINE_LIB_SUFFIX} )
	SET( MENGINE_LIB_SUFFIXD _mt${MENGINE_LIB_SUFFIXD} )
endif( MENGE_USE_MT )


if( WIN32 )
	ADD_DEFINITIONS( -DUNICODE )
endif( WIN32 )

SET( MENGE_DEPENDENCIES )
SET( APPLICATION_DEPENDENCIES )
SET( APPLICATION_LIBS )
SET( APPLICATION_LIB_PATHS )

INCLUDE_DIRECTORIES( ${Mengine_SOURCE_DIR} )

ADD_SUBDIRECTORY( Menge )

ADD_SUBDIRECTORY( Utils )

if( MENGE_USE_MT )
	ADD_DEPENDENCIES( Menge_mt
		${MENGE_DEPENDENCIES}
	)
else( MENGE_USE_MT )
	ADD_DEPENDENCIES( Menge
		${MENGE_DEPENDENCIES}
	)
endif( MENGE_USE_MT )


ADD_SUBDIRECTORY( System )

LINK_DIRECTORIES( ${THIRDPARTY_DIR}/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE} ${APPLICATION_LIB_PATHS} )
IF( WIN32 )
	ADD_SUBDIRECTORY( WinApplication )
	ADD_DEPENDENCIES( WinApplication ${APPLICATION_DEPENDENCIES} )

ELSEIF( APPLE )
	ADD_SUBDIRECTORY( MacOSApplication )
	ADD_DEPENDENCIES( MacOSApplication ${APPLICATION_DEPENDENCIES} )

ENDIF( WIN32 )