
set( MY_LIB_NAME CURLHTTPSystem )

ADD_FILTER(
src
	CURLHTTPSystem.cpp
	CURLHTTPSystem.h
	CURLHTTPSystem.def
	CURLHTTPRequestPerformer.cpp
	CURLHTTPRequestPerformer.h
	CURLHTTPRequestPerformerSync.h
	CURLHTTPRequestPerformerSync.cpp
	CURLHTTPRequestPerformerPostForm.h
	CURLHTTPRequestPerformerPostForm.cpp
	CURLHTTPRequestPerformerAsync.h
	CURLHTTPRequestPerformerAsync.cpp
	CURLHTTPUtils.cpp
	CURLHTTPUtils.h

)

INCLUDE_DIRECTORIES( ${Mengine_SOURCE_DIR}/Utils 
					 ${THIRDPARTY_DIR}                 
					 ${THIRDPARTY_DIR}/libcurl/include
)

INCLUDE_DIRECTORIES( ${THIRDPARTY_DIR}/boost )

SET(CURL_LIB_DIR  ${THIRDPARTY_DIR}/libcurl/lib/ )

ADD_LIBRARY( ${MY_LIB_NAME} SHARED ${SRC_FILES} )

SET(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS}/EXPORT:dllCreatePlugin")

SET( APPLICATION_DEPENDENCIES
 ${APPLICATION_DEPENDENCIES}
 ${MY_LIB_NAME}
)

SET( APPLICATION_DEPENDENCIES
 ${APPLICATION_DEPENDENCIES}
 PARENT_SCOPE
)

SET( APPLICATION_LIB_PATHS
 ${APPLICATION_LIB_PATHS}
 ${THIRDPARTY_DIR}/libcurl/lib
)

SET( APPLICATION_LIB_PATHS
 ${APPLICATION_LIB_PATHS}
 PARENT_SCOPE
)

SET( APPLICATION_LIBS
 ${APPLICATION_LIBS}
 PARENT_SCOPE
)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Logger)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Core)

SET(
 CURL_STATIC_LIBS
 ${CURL_LIB_DIR}${MENGINE_LIB_PREFIX}Debug/curllib${MENGINE_LIB_SUFFIX}
 ${CURL_LIB_DIR}${MENGINE_LIB_PREFIX}Debug/curllib_static${MENGINE_LIB_SUFFIX}
 )

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ${CURL_STATIC_LIBS} )


