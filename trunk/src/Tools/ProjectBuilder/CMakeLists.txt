set( MY_LIB_NAME ProjectBuilder )

ADD_FILTER(
src
    ProjectBuilder.cpp
    
	AlphaSpreading.cpp
    AlphaSpreading.h
    Image.cpp
    Image.h
    XmlToBinDecoder.cpp
    XmlToBinDecoder.h
    XmlToAekConverter.cpp
    XmlToAekConverter.h
)

INCLUDE_DIRECTORIES( ${Mengine_SOURCE_DIR}/Utils
			         ${THIRDPARTY_DIR}/pugixml/src
                     ${THIRDPARTY_DIR}/metabuf
                     ${THIRDPARTY_DIR}/pybind/include
)
 
ADD_EXECUTABLE( ${MY_LIB_NAME} WIN32 ${SRC_FILES} )

add_definitions(-DUNICODE)
add_definitions(-D_UNICODE)

add_definitions(-DMS_NO_COREDLL)
add_definitions(-DPy_NO_ENABLE_SHARED)
add_definitions(-DPYBIND_PYTHON_VERSION=342)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Logger)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Core)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Math)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Kernel)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceCodec)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceConverter)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceFile)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceLog)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServicePlugin)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceProvider)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceStringize)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceUnicode)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceThread)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} ServiceArchive)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Win32UnicodeSystem)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} Win32ThreadSystem)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} AstralaxParticleSystem)

TARGET_LINK_LIBRARIES(${MY_LIB_NAME} MengeXmlCodecPlugin)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} MengeImageCodecPlugin)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} MengeZipPlugin)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} MengeLZ4Plugin)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} MengeWin32FileGroupPlugin)
TARGET_LINK_LIBRARIES(${MY_LIB_NAME} MengeDevelopmentConverterPlugin)

TARGET_LINK_LIBRARIES( ${MY_LIB_NAME}    
    ${THIRDPARTY_DIR}/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE}/${MENGINE_LIB_PREFIX}python3_static${MENGINE_LIB_SUFFIX}
    ${THIRDPARTY_DIR}/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE}/${MENGINE_LIB_PREFIX}zlib_static${MENGINE_LIB_SUFFIX}
    ${THIRDPARTY_DIR}/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE}/${MENGINE_LIB_PREFIX}stdex_static${MENGINE_LIB_SUFFIX}
    ${THIRDPARTY_DIR}/${MENGINE_LIB_DIR}/${CMAKE_BUILD_TYPE}/${MENGINE_LIB_PREFIX}pybind3_static${MENGINE_LIB_SUFFIX}
    )
    
foreach(dependency ${APPLICATION_DEPENDENCIES})
	#MESSAGE( ${LIB_PREFIX}${dependency}${MENGINE_LIB_SUFFIX} )
	TARGET_LINK_LIBRARIES( ${MY_LIB_NAME} debug ${dependency} )
	TARGET_LINK_LIBRARIES( ${MY_LIB_NAME} optimized ${dependency} )
endforeach(dependency ${APPLICATION_DEPENDENCIES})    

TARGET_LINK_LIBRARIES( ${MY_LIB_NAME} ${APPLICATION_LIBS} comctl32 )